{"version":3,"sources":["components/MainBody.jsx","components/AboutMe.jsx","components/ProjectCard.jsx","components/Project.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["MainBody","props","toggleHover","data","newhoverStatus","state","hoverstatus","event","icon","id","setState","backgroundType","Configs","devInfo","devIntro","devDesc","icons","className","this","map","key","target","rel","href","url","image","onMouseEnter","onMouseLeave","role","Component","AboutMe","componentDidMount","handleRequest","e","axios","get","instaLink","instaUsername","instaQuerry","then","response","instaProfilePic","graphql","user","profile_pic_url_hd","catch","error","console","log","finally","heading","aboutDev","src","alt","ProjectCard","handleUpdatetime","date","Date","value","pushed_at","diff","getTime","hours","Math","trunc","updated_at","toString","day","getDate","monthIndex","getMonth","year","getFullYear","stargazers_count","download_url","svn_url","repo_url","name","description","languages_url","Language","array","total_count","index","push","language","Project","gitHubLink","gitHubUsername","gitHubQuerry","projectsArray","slice","project","Footer","bgStyle","backgroundColor","style","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf89dbba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Typist from \"react-typist\";\nimport \"../App\";\nimport Configs from \"../configurations.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nclass MainBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundType: Configs.backgroundType,\n      devInfo: Configs.devIntro,\n      devDesc: Configs.devDesc,\n      hoverstatus: [\"socialicons\", \"socialicons\", \"socialicons\", \"socialicons\"]\n    };\n  }\n\n  toggleHover = data => {\n    const newhoverStatus = [...this.state.hoverstatus];\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      this.setState({ hoverstatus: newhoverStatus });\n    } else if (data.event === \"leave\"){\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      this.setState({ hoverstatus: newhoverStatus });\n    }\n  };\n\n  render() {\n    const icons = Configs.icons;\n    return (\n      <div>\n        <div\n          id=\"divmainbody\"\n          className=\"jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n        >\n          <div className=\" container container-fluid text-center \">\n            <h1 className=\"display-1\">\n              {this.state.devInfo}\n            </h1>\n            <Typist className=\"lead\"> {this.state.devDesc}</Typist>\n            <div className=\" p-5\">\n              {icons.map(icon => (\n                <a\n                  key={icon.id}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`${icon.url}`}\n                >\n                  <i\n                    className={`fab ${icon.image}  fa-3x ${\n                      this.state.hoverstatus[icon.id]\n                    }`}\n                    onMouseEnter={() =>\n                      this.toggleHover({ icon: icon, event: \"enter\" })\n                    }\n                    onMouseLeave={() =>\n                      this.toggleHover({ icon: icon, event: \"leave\" })\n                    }\n                  />\n                </a>\n              ))}\n            </div>\n            <a\n              className=\"btn btn-outline-light btn-lg\"\n              href=\"#divaboutme\"\n              role=\"button\"\n            >\n              More about me\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainBody;","import React, { Component } from \"react\";\nimport Configs from \"../configurations.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nclass AboutMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heading: \"About me\",\n      aboutDev: Configs.aboutDev,\n      instaProfilePic: \"bad request\"\n    };\n  }\n  componentDidMount = () => {\n    this.handleRequest();\n  };\n\n  handleRequest = e => {\n    axios\n      .get(Configs.instaLink + Configs.instaUsername + Configs.instaQuerry)\n      .then(response => {\n        // handle success\n        // console.log(response.data.graphql);\n        this.setState({\n          instaProfilePic: response.data.graphql.user.profile_pic_url_hd\n        });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  };\n\n  render() {\n    return (\n      <div id=\"divaboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n        <div className=\" container container-fluid p-5\">\n          <div className=\"row\">\n            <div className=\" col-5 d-none d-lg-block align-self-center\">\n              <img\n                className=\" border border-secondary rounded-circle\"\n                src={this.state.instaProfilePic} alt=\"profilepicture\"\n              ></img>\n            </div>\n            <div className=\" col-lg-7\">\n              <h1 className=\"display-4 mb-5 text-center\">\n                {this.state.heading}\n              </h1>\n              <p className=\" lead text-center\">{this.state.aboutDev}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutMe;","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nclass ProjectCard extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: this.props.value,\n        updated_at: \"0 mints\",\n        stargazers_count: this.props.value.stargazers_count,\n        download_url: this.props.value.svn_url + \"/archive/master.zip\",\n        repo_url: this.props.value.svn_url\n      };\n    }\n    componentDidMount = () => {\n      this.handleUpdatetime();\n    };\n  \n    handleUpdatetime = () => {\n      const date = new Date(this.state.value.pushed_at);\n      const nowdate = new Date();\n      var diff = nowdate.getTime() - date.getTime();\n      var hours = Math.trunc(diff / 1000 / 60 / 60);\n      if (hours < 24) {\n        this.setState({ updated_at: hours.toString() + \" hours ago\" });\n      } else {\n        var monthNames = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\"\n        ];\n        var day = date.getDate();\n        var monthIndex = date.getMonth();\n        var year = date.getFullYear();\n        this.setState({\n          updated_at: \"on \" + day + \" \" + monthNames[monthIndex] + \" \" + year\n        });\n      }\n    };\n  \n    render() {\n      return (\n        <div className=\"col-md-6\">\n          <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n            {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{this.state.value.name} </h5>\n              <p className=\"card-text\">{this.state.value.description} </p>\n              <a\n                href={this.state.download_url}\n                className=\" btn btn-outline-secondary mr-3\"\n              >\n                <i className=\"fab fa-github\" /> Clone Project\n              </a>\n              <a\n                href={this.state.repo_url}\n                target=\" _blank\"\n                className=\" btn btn-outline-secondary\"\n              >\n                <i className=\"fab fa-github\" /> Repo\n              </a>\n              <hr />\n              <Language value={this.state.value.languages_url}></Language>\n              <p className=\"card-text\">\n                <h href=\"\" className=\" text-dark card-link mr-4\">\n                  <i className=\"fab fa-github\" /> Stars{\" \"}\n                  <span className=\"badge badge-dark\">\n                    {this.state.stargazers_count}\n                  </span>\n                </h>\n                <small className=\"text-muted\">\n                  Updated {this.state.updated_at}\n                </small>\n              </p>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Language extends Component {\n    state = {\n      data: []\n    };\n    componentDidMount = () => {\n      this.handleRequest();\n    };\n  \n    handleRequest = () => {\n      axios\n        .get(this.props.value)\n        .then(response => {\n          // handle success\n          // console.log(response.data);\n          this.setState({ data: response.data });\n        })\n        .catch(function(error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function() {\n          // always executed\n        });\n    };\n  \n    render() {\n      const array = [];\n      var total_count = 0;\n      for (var index in this.state.data) {\n        array.push(index);\n        total_count = total_count + this.state.data[index];\n        // console.log(index, this.state.data[index]);\n      }\n      // console.log(\"array contains \", array, this.state.data[array[0]]);\n      return (\n        <div className=\"pb-3\">\n          Languages:{\" \"}\n          {array.map(language => (\n            <p key={language} className=\"badge badge-light card-link\">\n              {language}:{\" \"}\n              {Math.trunc((this.state.data[language] / total_count) * 1000) / 10}{\" \"}\n              %\n            </p>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  export default ProjectCard;","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport Configs from \"../configurations.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport ProjectCard from \"./ProjectCard\"\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heading: \"Recent Projects\",\n      projectsArray: []\n    };\n  }\n  componentDidMount = () => {\n    this.handleRequest();\n  };\n\n  handleRequest = e => {\n    axios\n      .get(Configs.gitHubLink + Configs.gitHubUsername + Configs.gitHubQuerry)\n      .then(response => {\n        // handle success\n        // console.log(response.data.slice(0, 4));\n        this.setState({\n          projectsArray: response.data.slice(0, 4)\n        });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  };\n\n  render() {\n    return (\n      <div\n        id=\"divproject\"\n        className=\"jumbotron jumbotron-fluid bg-transparent m-0\"\n      >\n        <div className=\" container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">{this.state.heading}</h1>\n          <div className=\" row\">\n            {this.state.projectsArray.map(project => (\n              <ProjectCard\n                key={project.id}\n                id={project.id}\n                value={project}\n              ></ProjectCard>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default  Project;","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\n\nclass Footer extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        bgStyle: { backgroundColor: \"#f5f5f5\" }\n      };\n    }\n    render() {\n      return (\n        <footer style={this.state.bgStyle} className=\" mt-auto py-3 text-center\">\n          {/* <strong> &copy; 2019 </strong>*/}\n          <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\n          <a\n            className=\" badge badge-dark\"\n            target=\"noopener\"\n            href={\"https://github.com/shiniga666\"}\n          >\n            Dimas Prabaswara W.\n          </a>{\" \"}\n          using <i className=\"fab fa-react\"></i>\n          <p>\n            <small className=\"text-muted\">\n              {\" \"}\n              Created By Samid\n            </small>\n          </p>\n        </footer>\n      );\n    }\n  }\n\n  export default Footer;","import React, { Component } from \"react\";\nimport MainBody from \"./components/MainBody\";\nimport AboutMe from \"./components/AboutMe\";\nimport Project from \"./components/Project\";\nimport Footer from \"./components/Footer\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <MainBody></MainBody>\n        <AboutMe></AboutMe>\n        <Project></Project>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}